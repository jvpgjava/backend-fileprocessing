// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/files/process": {
            "post": {
                "description": "Processa arquivo e extrai texto usando OCR ou extração nativa",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Processar arquivo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Arquivo para processar (PDF, imagem, TXT, DOCX)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arquivo processado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/files/supported-types": {
            "get": {
                "description": "Retorna tipos de arquivo suportados pelo serviço",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Tipos de arquivo suportados",
                "responses": {
                    "200": {
                        "description": "Lista de tipos suportados",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/models.SupportedTypes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Verifica a saúde do serviço",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Serviço funcionando",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/models.HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "description": "Retorna status detalhado do serviço",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Status detalhado",
                "responses": {
                    "200": {
                        "description": "Status do serviço",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/models.StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/swagger/index.html": {
            "get": {
                "description": "Interface Swagger UI",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "swagger"
                ],
                "summary": "Documentação Swagger",
                "responses": {
                    "200": {
                        "description": "Interface Swagger"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.HealthResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.Info": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "fileType": {
                    "type": "string"
                },
                "processedAt": {
                    "type": "string"
                },
                "processingTime": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "info": {
                            "$ref": "#/definitions/models.Info"
                        },
                        "text": {
                            "type": "string"
                        }
                    }
                },
                "error": {
                    "$ref": "#/definitions/models.Error"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.StatusResponse": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.SupportedTypes": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxSize": {
                    "type": "string"
                },
                "maxSizeBytes": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:9091",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Backend File Processing API",
	Description:      "API para processamento de arquivos com extração de texto usando OCR e processamento nativo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
